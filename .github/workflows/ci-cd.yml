name: CI/CD Pipeline

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    test:
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:13
                env:
                    POSTGRES_USER: user
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: simulateur
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        steps:
            - uses: actions/checkout@v2
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: "3.9"
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r backend/requirements.txt
            - name: Run tests
              env:
                  DATABASE_URL: postgresql://user:password@localhost/simulateur
              run: |
                  cd backend
                  pytest

    deploy:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Login to Docker Hub
              run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            - name: Build and push Docker images
              run: |
                  docker-compose build
                  docker tag simulateur-backend ${{ secrets.DOCKER_USERNAME }}/simulateur-backend:latest
                  docker tag simulateur-frontend ${{ secrets.DOCKER_USERNAME }}/simulateur-frontend:latest
                  docker push ${{ secrets.DOCKER_USERNAME }}/simulateur-backend:latest
                  docker push ${{ secrets.DOCKER_USERNAME }}/simulateur-frontend:latest
