# © 2025 Mouvement Français pour un Revenu de Base http://www.revenudebase.info
#
# SPDX-License-Identifier: Apache-2.0+
# SPDX-FileContributor:    Fabien FURFARO

services:
  backend:
    build: ./backend
    ports:
      - "${BACKEND_PORT}:8000"
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db/${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
        restart: true
    networks:
      - internal
    restart: unless-stopped

  frontend:
    build: ./frontend
    ports:
      - "${FRONTEND_PORT}:8501"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    networks:
      - internal
      - traefik_public
    labels:
      - "traefik.enable=true"
      # - "traefik.http.routers.frontend.rule=Host(`nom-domaine.com`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
    restart: unless-stopped

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - internal
    restart: unless-stopped

  traefik: # Reverse proxy avec Let’s Encrypt
    image: traefik:v2.10
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # - "--certificatesresolvers.letsencrypt.acme.email=email@example.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - traefik_public
    restart: unless-stopped

  tests:
    build:
      context: .
      dockerfile: Dockerfile.tests
    depends_on:
      - backend
      - frontend
    environment:
      - FRONTEND_URL=http://frontend:8501
      - BACKEND_URL=http://backend:8000
    volumes:
      - ./tests:/app/tests
    command: pytest tests/unit tests/e2e -v

volumes:
  postgres_data:

networks:
  internal:
  traefik_public:
