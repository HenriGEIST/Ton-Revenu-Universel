# © 2025 Mouvement Français pour un Revenu de Base http://www.revenudebase.info
#
# SPDX-License-Identifier: Apache-2.0+
# SPDX-FileContributor:    Fabien FURFARO
# SPDX-FileContributor:    Henri  GEIST

services:
  backend:
    container_name: ${INSTANCE_NAME}_rdb_simulator_backend
    build: ./backend
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db/${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
        restart: true
    networks:
      - db_backend
      - backend_frontend
      - traefik  # To remove as soon as not needed for tests anymore.
    labels:      # To remove as soon as not needed for tests anymore.
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.${INSTANCE_NAME}_rdb_simulator_backend.rule=Host(`backend.${DOMAIN_NAME}`)"
      - "traefik.http.services.${INSTANCE_NAME}_rdb_simulator_backend_service.loadbalancer.server.port=8000"
      - "traefik.http.routers.${INSTANCE_NAME}_rdb_simulator_backend.service=${INSTANCE_NAME}_rdb_simulator_backend_service"
    restart: unless-stopped

  frontend:
    container_name: ${INSTANCE_NAME}_rdb_simulator_frontend
    build: ./frontend
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    networks:
      - backend_frontend
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.${INSTANCE_NAME}_rdb_simulator_frontend.rule=Host(`${DOMAINE_NAME}`)"
      - "traefik.http.services.${INSTANCE_NAME}_rdb_simulator_frontend_service.loadbalancer.server.port=8501"
      - "traefik.http.routers.${INSTANCE_NAME}_rdb_simulator_frontend.service=${INSTANCE_NAME}_rdb_simulator_frontend_service"
    restart: unless-stopped

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - db_backend
    restart: unless-stopped

  tests:
    build:
      context: .
      dockerfile: Dockerfile.tests
    depends_on:
      - backend
      - frontend
    environment:
      - FRONTEND_URL=http://frontend:8501
      - BACKEND_URL=http://backend:8000
    volumes:
      - ./tests:/app/tests
    command: pytest tests/unit tests/e2e -v
    networks:
      - backend_frontend

volumes:
  postgres_data:

networks:
  db_backend:
  backend_frontend:
  traefik:
    name: ${TRAEFIK_NETWORK_NAME}
    external: true
